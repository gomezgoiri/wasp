// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the schema definition file instead

package coreaccounts

import (
	"github.com/iotaledger/wasp/packages/wasmvm/wasmlib/go/wasmlib"
	"github.com/iotaledger/wasp/packages/wasmvm/wasmlib/go/wasmlib/wasmtypes"
)

type ImmutableFoundryCreateNewParams struct {
	Proxy wasmtypes.Proxy
}

func NewImmutableFoundryCreateNewParams() ImmutableFoundryCreateNewParams {
	return ImmutableFoundryCreateNewParams{Proxy: wasmlib.NewParamsProxy()}
}

func (s ImmutableFoundryCreateNewParams) TokenScheme() wasmtypes.ScImmutableBytes {
	return wasmtypes.NewScImmutableBytes(s.Proxy.Root(ParamTokenScheme))
}

type MutableFoundryCreateNewParams struct {
	Proxy wasmtypes.Proxy
}

func (s MutableFoundryCreateNewParams) TokenScheme() wasmtypes.ScMutableBytes {
	return wasmtypes.NewScMutableBytes(s.Proxy.Root(ParamTokenScheme))
}

type ImmutableFoundryDestroyParams struct {
	Proxy wasmtypes.Proxy
}

func NewImmutableFoundryDestroyParams() ImmutableFoundryDestroyParams {
	return ImmutableFoundryDestroyParams{Proxy: wasmlib.NewParamsProxy()}
}

func (s ImmutableFoundryDestroyParams) FoundrySN() wasmtypes.ScImmutableUint32 {
	return wasmtypes.NewScImmutableUint32(s.Proxy.Root(ParamFoundrySN))
}

type MutableFoundryDestroyParams struct {
	Proxy wasmtypes.Proxy
}

func (s MutableFoundryDestroyParams) FoundrySN() wasmtypes.ScMutableUint32 {
	return wasmtypes.NewScMutableUint32(s.Proxy.Root(ParamFoundrySN))
}

type ImmutableFoundryModifySupplyParams struct {
	Proxy wasmtypes.Proxy
}

func NewImmutableFoundryModifySupplyParams() ImmutableFoundryModifySupplyParams {
	return ImmutableFoundryModifySupplyParams{Proxy: wasmlib.NewParamsProxy()}
}

func (s ImmutableFoundryModifySupplyParams) DestroyTokens() wasmtypes.ScImmutableBool {
	return wasmtypes.NewScImmutableBool(s.Proxy.Root(ParamDestroyTokens))
}

func (s ImmutableFoundryModifySupplyParams) FoundrySN() wasmtypes.ScImmutableUint32 {
	return wasmtypes.NewScImmutableUint32(s.Proxy.Root(ParamFoundrySN))
}

func (s ImmutableFoundryModifySupplyParams) SupplyDeltaAbs() wasmtypes.ScImmutableBigInt {
	return wasmtypes.NewScImmutableBigInt(s.Proxy.Root(ParamSupplyDeltaAbs))
}

type MutableFoundryModifySupplyParams struct {
	Proxy wasmtypes.Proxy
}

func (s MutableFoundryModifySupplyParams) DestroyTokens() wasmtypes.ScMutableBool {
	return wasmtypes.NewScMutableBool(s.Proxy.Root(ParamDestroyTokens))
}

func (s MutableFoundryModifySupplyParams) FoundrySN() wasmtypes.ScMutableUint32 {
	return wasmtypes.NewScMutableUint32(s.Proxy.Root(ParamFoundrySN))
}

func (s MutableFoundryModifySupplyParams) SupplyDeltaAbs() wasmtypes.ScMutableBigInt {
	return wasmtypes.NewScMutableBigInt(s.Proxy.Root(ParamSupplyDeltaAbs))
}

type ImmutableHarvestParams struct {
	Proxy wasmtypes.Proxy
}

func NewImmutableHarvestParams() ImmutableHarvestParams {
	return ImmutableHarvestParams{Proxy: wasmlib.NewParamsProxy()}
}

func (s ImmutableHarvestParams) ForceMinimumBaseTokens() wasmtypes.ScImmutableUint64 {
	return wasmtypes.NewScImmutableUint64(s.Proxy.Root(ParamForceMinimumBaseTokens))
}

type MutableHarvestParams struct {
	Proxy wasmtypes.Proxy
}

func (s MutableHarvestParams) ForceMinimumBaseTokens() wasmtypes.ScMutableUint64 {
	return wasmtypes.NewScMutableUint64(s.Proxy.Root(ParamForceMinimumBaseTokens))
}

type ImmutableTransferAllowanceToParams struct {
	Proxy wasmtypes.Proxy
}

func NewImmutableTransferAllowanceToParams() ImmutableTransferAllowanceToParams {
	return ImmutableTransferAllowanceToParams{Proxy: wasmlib.NewParamsProxy()}
}

func (s ImmutableTransferAllowanceToParams) AgentID() wasmtypes.ScImmutableAgentID {
	return wasmtypes.NewScImmutableAgentID(s.Proxy.Root(ParamAgentID))
}

type MutableTransferAllowanceToParams struct {
	Proxy wasmtypes.Proxy
}

func (s MutableTransferAllowanceToParams) AgentID() wasmtypes.ScMutableAgentID {
	return wasmtypes.NewScMutableAgentID(s.Proxy.Root(ParamAgentID))
}

type ImmutableAccountNFTsParams struct {
	Proxy wasmtypes.Proxy
}

func NewImmutableAccountNFTsParams() ImmutableAccountNFTsParams {
	return ImmutableAccountNFTsParams{Proxy: wasmlib.NewParamsProxy()}
}

func (s ImmutableAccountNFTsParams) AgentID() wasmtypes.ScImmutableAgentID {
	return wasmtypes.NewScImmutableAgentID(s.Proxy.Root(ParamAgentID))
}

type MutableAccountNFTsParams struct {
	Proxy wasmtypes.Proxy
}

func (s MutableAccountNFTsParams) AgentID() wasmtypes.ScMutableAgentID {
	return wasmtypes.NewScMutableAgentID(s.Proxy.Root(ParamAgentID))
}

type ImmutableBalanceParams struct {
	Proxy wasmtypes.Proxy
}

func NewImmutableBalanceParams() ImmutableBalanceParams {
	return ImmutableBalanceParams{Proxy: wasmlib.NewParamsProxy()}
}

func (s ImmutableBalanceParams) AgentID() wasmtypes.ScImmutableAgentID {
	return wasmtypes.NewScImmutableAgentID(s.Proxy.Root(ParamAgentID))
}

type MutableBalanceParams struct {
	Proxy wasmtypes.Proxy
}

func (s MutableBalanceParams) AgentID() wasmtypes.ScMutableAgentID {
	return wasmtypes.NewScMutableAgentID(s.Proxy.Root(ParamAgentID))
}

type ImmutableBalanceBaseTokenParams struct {
	Proxy wasmtypes.Proxy
}

func NewImmutableBalanceBaseTokenParams() ImmutableBalanceBaseTokenParams {
	return ImmutableBalanceBaseTokenParams{Proxy: wasmlib.NewParamsProxy()}
}

func (s ImmutableBalanceBaseTokenParams) AgentID() wasmtypes.ScImmutableAgentID {
	return wasmtypes.NewScImmutableAgentID(s.Proxy.Root(ParamAgentID))
}

type MutableBalanceBaseTokenParams struct {
	Proxy wasmtypes.Proxy
}

func (s MutableBalanceBaseTokenParams) AgentID() wasmtypes.ScMutableAgentID {
	return wasmtypes.NewScMutableAgentID(s.Proxy.Root(ParamAgentID))
}

type ImmutableBalanceNativeTokenParams struct {
	Proxy wasmtypes.Proxy
}

func NewImmutableBalanceNativeTokenParams() ImmutableBalanceNativeTokenParams {
	return ImmutableBalanceNativeTokenParams{Proxy: wasmlib.NewParamsProxy()}
}

func (s ImmutableBalanceNativeTokenParams) AgentID() wasmtypes.ScImmutableAgentID {
	return wasmtypes.NewScImmutableAgentID(s.Proxy.Root(ParamAgentID))
}

func (s ImmutableBalanceNativeTokenParams) TokenID() wasmtypes.ScImmutableTokenID {
	return wasmtypes.NewScImmutableTokenID(s.Proxy.Root(ParamTokenID))
}

type MutableBalanceNativeTokenParams struct {
	Proxy wasmtypes.Proxy
}

func (s MutableBalanceNativeTokenParams) AgentID() wasmtypes.ScMutableAgentID {
	return wasmtypes.NewScMutableAgentID(s.Proxy.Root(ParamAgentID))
}

func (s MutableBalanceNativeTokenParams) TokenID() wasmtypes.ScMutableTokenID {
	return wasmtypes.NewScMutableTokenID(s.Proxy.Root(ParamTokenID))
}

type ImmutableFoundryOutputParams struct {
	Proxy wasmtypes.Proxy
}

func NewImmutableFoundryOutputParams() ImmutableFoundryOutputParams {
	return ImmutableFoundryOutputParams{Proxy: wasmlib.NewParamsProxy()}
}

func (s ImmutableFoundryOutputParams) FoundrySN() wasmtypes.ScImmutableUint32 {
	return wasmtypes.NewScImmutableUint32(s.Proxy.Root(ParamFoundrySN))
}

type MutableFoundryOutputParams struct {
	Proxy wasmtypes.Proxy
}

func (s MutableFoundryOutputParams) FoundrySN() wasmtypes.ScMutableUint32 {
	return wasmtypes.NewScMutableUint32(s.Proxy.Root(ParamFoundrySN))
}

type ImmutableGetAccountNonceParams struct {
	Proxy wasmtypes.Proxy
}

func NewImmutableGetAccountNonceParams() ImmutableGetAccountNonceParams {
	return ImmutableGetAccountNonceParams{Proxy: wasmlib.NewParamsProxy()}
}

func (s ImmutableGetAccountNonceParams) AgentID() wasmtypes.ScImmutableAgentID {
	return wasmtypes.NewScImmutableAgentID(s.Proxy.Root(ParamAgentID))
}

type MutableGetAccountNonceParams struct {
	Proxy wasmtypes.Proxy
}

func (s MutableGetAccountNonceParams) AgentID() wasmtypes.ScMutableAgentID {
	return wasmtypes.NewScMutableAgentID(s.Proxy.Root(ParamAgentID))
}

type ImmutableNftDataParams struct {
	Proxy wasmtypes.Proxy
}

func NewImmutableNftDataParams() ImmutableNftDataParams {
	return ImmutableNftDataParams{Proxy: wasmlib.NewParamsProxy()}
}

func (s ImmutableNftDataParams) NftID() wasmtypes.ScImmutableNftID {
	return wasmtypes.NewScImmutableNftID(s.Proxy.Root(ParamNftID))
}

type MutableNftDataParams struct {
	Proxy wasmtypes.Proxy
}

func (s MutableNftDataParams) NftID() wasmtypes.ScMutableNftID {
	return wasmtypes.NewScMutableNftID(s.Proxy.Root(ParamNftID))
}
